<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zn.ddxj.mapper.RecruitCategoryMapper" >

    <resultMap id="BaseResultMap" type="net.zn.ddxj.entity.RecruitCategory" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="recruit_id" property="recruitId" jdbcType="INTEGER" />
        <result column="category_id" property="categoryId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="flag" property="flag" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, recruit_id, category_id, create_time, update_time, flag
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from zn_recruit_category
        where id = #{id,jdbcType=INTEGER} and flag = 1
    </select>

	<!-- 根据招聘Id删除分类 -->
    <delete id="deleteRecruitCategory" parameterType="java.lang.Integer" >
        delete from zn_recruit_category
        where recruit_id = #{recruitId}
    </delete>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from zn_recruit_category
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="net.zn.ddxj.entity.RecruitCategory" >
        insert into zn_recruit_category (id, recruit_id, category_id, 
            create_time, update_time, flag
            )
        values (#{id,jdbcType=INTEGER}, #{recruitId,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, 
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="net.zn.ddxj.entity.RecruitCategory" >
        insert into zn_recruit_category
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="recruitId != null" >
                recruit_id,
            </if>
            <if test="categoryId != null" >
                category_id,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="flag != null" >
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="recruitId != null" >
                #{recruitId,jdbcType=INTEGER},
            </if>
            <if test="categoryId != null" >
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="net.zn.ddxj.entity.RecruitCategory" >
        update zn_recruit_category
        <set >
            <if test="recruitId != null" >
                recruit_id = #{recruitId,jdbcType=INTEGER},
            </if>
            <if test="categoryId != null" >
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="net.zn.ddxj.entity.RecruitCategory" >
        update zn_recruit_category
        set recruit_id = #{recruitId,jdbcType=INTEGER},
            category_id = #{categoryId,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            flag = #{flag,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 删除招聘职位 -->
    <delete id="delRecruitCategoryRecord" parameterType="java.lang.Integer" >
        DELETE FROM zn_recruit_category WHERE recruit_id in(SELECT id FROM zn_recruit WHERE user_id=#{userId})
    </delete>
</mapper>