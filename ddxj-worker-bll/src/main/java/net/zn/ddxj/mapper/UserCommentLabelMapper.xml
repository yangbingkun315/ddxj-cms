<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zn.ddxj.mapper.UserCommentLabelMapper" >

    <resultMap id="BaseResultMap" type="net.zn.ddxj.entity.UserCommentLabel" >
        <id column="comment_id" property="commentId" jdbcType="INTEGER" />
        <result column="label_id" property="labelId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="flag" property="flag" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        comment_id, label_id, create_time, update_time, flag
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from zn_user_comment_label
        where comment_id = #{commentId,jdbcType=INTEGER} and flag = 1
    </select>
    
    <insert id="insertUserCommentLabel" parameterType="java.util.Map" >
        insert into zn_user_comment_label(comment_id,label_id,create_time,update_time) values(#{commentId},#{labelId},#{createTime},#{updateTime})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from zn_user_comment_label
        where comment_id = #{commentId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="net.zn.ddxj.entity.UserCommentLabel" >
        insert into zn_user_comment_label (comment_id, label_id, create_time, 
            update_time, flag)
        values (#{commentId,jdbcType=INTEGER}, #{labelId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
            #{updateTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="net.zn.ddxj.entity.UserCommentLabel" >
        insert into zn_user_comment_label
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="commentId != null" >
                comment_id,
            </if>
            <if test="labelId != null" >
                label_id,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="flag != null" >
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="commentId != null" >
                #{commentId,jdbcType=INTEGER},
            </if>
            <if test="labelId != null" >
                #{labelId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="net.zn.ddxj.entity.UserCommentLabel" >
        update zn_user_comment_label
        <set >
            <if test="labelId != null" >
                label_id = #{labelId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="net.zn.ddxj.entity.UserCommentLabel" >
        update zn_user_comment_label
        set label_id = #{labelId,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            flag = #{flag,jdbcType=INTEGER}
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
    <!-- 申请工头删除用户评论记录 -->
    <delete id="delUserCommentLabel" parameterType="java.lang.Integer">
		DELETE FROM zn_user_comment_label WHERE comment_id in (SELECT id FROM zn_user_comment WHERE to_user_id = #{userId} OR from_user_id=#{userId} )
    </delete>
</mapper>