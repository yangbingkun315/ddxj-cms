<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zn.ddxj.mapper.UserCommentMapper" >

    <resultMap id="BaseResultMap" type="net.zn.ddxj.entity.UserComment" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="to_user_id" property="toUserId" jdbcType="INTEGER" />
        <result column="from_user_id" property="fromUserId" jdbcType="INTEGER" />
        <result column="comment_content" property="commentContent" jdbcType="VARCHAR" />
        <result column="recruit_id" property="recruitId" jdbcType="INTEGER" />
        <result column="level" property="level" jdbcType="INTEGER" />
        <result column="anonymous_status" property="anonymousStatus" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="flag" property="flag" jdbcType="INTEGER" />
        <!-- 一对一 分数配置 -->
        <association property="fromUser" column="from_user_id" select="net.zn.ddxj.mapper.UserMapper.queryUserDetail" javaType="java.lang.Integer"></association>
        <!-- 一对多关系 -->
        <collection property="labelList"  column="id" select="net.zn.ddxj.mapper.CommentLabelMapper.getLabelListByUserId"></collection>
    </resultMap>

    <sql id="Base_Column_List" >
        id, to_user_id, from_user_id, comment_content, recruit_id, level, anonymous_status, 
        create_time, update_time, flag
    </sql>

	<!-- 查询评论 -->
	<select id="queryUserCommentId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
        select id from zn_user_comment
        where to_user_id = #{toUserId} and from_user_id = #{fromUserId} and recruit_id = #{recruitId} and flag = 1 order by create_time desc
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from zn_user_comment
        where id = #{id,jdbcType=INTEGER} and flag = 1
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from zn_user_comment
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="net.zn.ddxj.entity.UserComment" >
        insert into zn_user_comment (id, to_user_id, from_user_id, 
            comment_content, recruit_id, level, 
            anonymous_status, create_time, update_time, 
            flag)
        values (#{id,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}, #{fromUserId,jdbcType=INTEGER}, 
            #{commentContent,jdbcType=VARCHAR}, #{recruitId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
            #{anonymousStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
            #{flag,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="net.zn.ddxj.entity.UserComment" useGeneratedKeys="true" keyProperty="id">
        insert into zn_user_comment
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="toUserId != null" >
                to_user_id,
            </if>
            <if test="fromUserId != null" >
                from_user_id,
            </if>
            <if test="commentContent != null" >
                comment_content,
            </if>
            <if test="recruitId != null" >
                recruit_id,
            </if>
            <if test="level != null" >
                level,
            </if>
            <if test="anonymousStatus != null" >
                anonymous_status,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="flag != null" >
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="toUserId != null" >
                #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null" >
                #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="commentContent != null" >
                #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="recruitId != null" >
                #{recruitId,jdbcType=INTEGER},
            </if>
            <if test="level != null" >
                #{level,jdbcType=INTEGER},
            </if>
            <if test="anonymousStatus != null" >
                #{anonymousStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="net.zn.ddxj.entity.UserComment" >
        update zn_user_comment
        <set >
            <if test="toUserId != null" >
                to_user_id = #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null" >
                from_user_id = #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="commentContent != null" >
                comment_content = #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="recruitId != null" >
                recruit_id = #{recruitId,jdbcType=INTEGER},
            </if>
            <if test="level != null" >
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="anonymousStatus != null" >
                anonymous_status = #{anonymousStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="net.zn.ddxj.entity.UserComment" >
        update zn_user_comment
        set to_user_id = #{toUserId,jdbcType=INTEGER},
            from_user_id = #{fromUserId,jdbcType=INTEGER},
            comment_content = #{commentContent,jdbcType=VARCHAR},
            recruit_id = #{recruitId,jdbcType=INTEGER},
            level = #{level,jdbcType=INTEGER},
            anonymous_status = #{anonymousStatus,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            flag = #{flag,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 根据被评论的编号查询评论列表 -->
    <select id="queryUserComment" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    	select  
    	<include refid="Base_Column_List" />  
    	from zn_user_comment WHERE to_user_id=#{userId} and flag = 1  	
    </select>
    <!-- 计算总评论数 -->
    <select id="countComment" parameterType="java.lang.Integer" resultType="int">
    	select  COUNT(1) as totalCount from zn_user_comment where to_user_id=#{userId} and flag = 1
    </select>
    <!-- 计算总评分 -->
    <select id="countCommentScore" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    	select sum(level) as scores from zn_user_comment where to_user_id=#{userId} and flag = 1
    </select>
    <select id="countCommentsScore" parameterType="java.lang.Integer" resultType="java.lang.String">
    	select sum(level)/count(id) from zn_user_comment where to_user_id = #{userId} and flag = 1
    </select>
    <!-- 申请工头删除评论 -->
    <delete id="deleteUserComment" parameterType="java.lang.Integer">
    	delete from zn_user_comment
        where to_user_id = #{userId} OR from_user_id=#{userId}
    </delete>
    <!-- 删除评论 -->
    <delete id="delUserCommentRecord" parameterType="java.lang.Integer">
    	delete from zn_user_comment
        where to_user_id = #{userId} OR from_user_id=#{userId}
    </delete>
</mapper>