<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zn.ddxj.mapper.CircleCommentMapper" >

    <resultMap id="BaseResultMap" type="net.zn.ddxj.entity.CircleComment" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="circle_id" property="circleId" jdbcType="INTEGER" />
        <result column="parent_id" property="parentId" jdbcType="INTEGER" />
        <result column="from_user_id" property="fromUserId" jdbcType="INTEGER" />
        <result column="to_user_id" property="toUserId" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="ip" property="ip" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="flag" property="flag" jdbcType="INTEGER" />
        <association property="fromUser" column="from_user_id" select="net.zn.ddxj.mapper.UserMapper.queryCircleUser" ></association>
        <association property="toUser" column="to_user_id" select="net.zn.ddxj.mapper.UserMapper.queryCircleUser" ></association>
        <collection property="subCircleCommentList"  column="id" select="net.zn.ddxj.mapper.CircleCommentMapper.queryCircleCommentParentList"></collection>
    </resultMap>

    <sql id="Base_Column_List" >
        id, circle_id, parent_id, from_user_id, to_user_id, content, ip, create_time, update_time, 
        flag
    </sql>
    
    <!-- 查询圈子评论列表 -->
    <select id="queryCircleCommentList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
			 <include refid="Base_Column_List" />
		from zn_circle_comment
        where circle_id = #{circleId} and (parent_id is NULL OR parent_id = 0) and flag = 1 order by create_time desc
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from zn_circle_comment
        where id = #{id,jdbcType=INTEGER} and flag = 1
    </select>
	<select id="queryCircleCommentParentList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	 	select 
        <include refid="Base_Column_List" />
        from zn_circle_comment
        where parent_id = #{id,jdbcType=INTEGER} and flag = 1
	</select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from zn_circle_comment
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="net.zn.ddxj.entity.CircleComment" >
        insert into zn_circle_comment (id, circle_id, parent_id, 
            from_user_id, to_user_id, content, 
            ip, create_time, update_time, 
            flag)
        values (#{id,jdbcType=INTEGER}, #{circleId,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
            #{fromUserId,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
            #{ip,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
            #{flag,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="net.zn.ddxj.entity.CircleComment" useGeneratedKeys="true" keyProperty="id">
        insert into zn_circle_comment
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="circleId != null" >
                circle_id,
            </if>
            <if test="parentId != null" >
                parent_id,
            </if>
            <if test="fromUserId != null" >
                from_user_id,
            </if>
            <if test="toUserId != null" >
                to_user_id,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="ip != null" >
                ip,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="flag != null" >
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="circleId != null" >
                #{circleId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null" >
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null" >
                #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="toUserId != null" >
                #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="ip != null" >
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="net.zn.ddxj.entity.CircleComment" >
        update zn_circle_comment
        <set >
            <if test="circleId != null" >
                circle_id = #{circleId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null" >
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="fromUserId != null" >
                from_user_id = #{fromUserId,jdbcType=INTEGER},
            </if>
            <if test="toUserId != null" >
                to_user_id = #{toUserId,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="ip != null" >
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="net.zn.ddxj.entity.CircleComment" >
        update zn_circle_comment
        set circle_id = #{circleId,jdbcType=INTEGER},
            parent_id = #{parentId,jdbcType=INTEGER},
            from_user_id = #{fromUserId,jdbcType=INTEGER},
            to_user_id = #{toUserId,jdbcType=INTEGER},
            content = #{content,jdbcType=VARCHAR},
            ip = #{ip,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            flag = #{flag,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <delete id="deleteCricleComment" parameterType="java.lang.Integer" >
        delete from zn_circle_comment
        where to_user_id = #{userId} OR from_user_id=#{userId}
    </delete>
    <!-- 删除圈子评论 -->
    <delete id="delUserCircleComment" parameterType="java.lang.Integer" >
        DELETE from zn_circle_comment  where to_user_id = #{userId} OR from_user_id=#{userId}
    </delete>
    
    <!-- 根据圈子ID删除圈子评论 -->
    <delete id="deleteCricleCommentById" parameterType="java.lang.Integer" >
        DELETE from zn_circle_comment  where circle_id = #{circleId} OR parent_id = #{circleId}
    </delete>
</mapper>