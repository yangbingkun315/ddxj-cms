<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zn.ddxj.mapper.MessageMapper" >

    <resultMap id="BaseResultMap" type="net.zn.ddxj.entity.Message" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="message_type" property="messageType" jdbcType="INTEGER" />
        <result column="message_content" property="messageContent" jdbcType="VARCHAR" />
        <result column="message_title" property="messageTitle" jdbcType="VARCHAR" />
        <result column="message_parameter" property="messageParameter" jdbcType="VARCHAR" />
        <result column="message_read" property="messageRead" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="flag" property="flag" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, message_type, message_content, message_title, message_parameter, message_read, 
        create_time, flag
    </sql>
	
	<!-- 查询记录量 -->
    <select id="queryMessageTotalCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select count(id) from zn_message
        where flag = 1
        <if test="type != null and type != '' and type > 0">
        	and message_read = #{type}
        </if>
    </select>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from zn_message
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from zn_message
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="net.zn.ddxj.entity.Message" >
        insert into zn_message (id, message_type, message_content, 
            message_title, message_parameter, message_read, 
            create_time, flag)
        values (#{id,jdbcType=INTEGER}, #{messageType,jdbcType=INTEGER}, #{messageContent,jdbcType=VARCHAR}, 
            #{messageTitle,jdbcType=VARCHAR}, #{messageParameter,jdbcType=VARCHAR}, #{messageRead,jdbcType=INTEGER}, 
            #{createTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="net.zn.ddxj.entity.Message" >
        insert into zn_message
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="messageType != null" >
                message_type,
            </if>
            <if test="messageContent != null" >
                message_content,
            </if>
            <if test="messageTitle != null" >
                message_title,
            </if>
            <if test="messageParameter != null" >
                message_parameter,
            </if>
            <if test="messageRead != null" >
                message_read,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="flag != null" >
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="messageType != null" >
                #{messageType,jdbcType=INTEGER},
            </if>
            <if test="messageContent != null" >
                #{messageContent,jdbcType=VARCHAR},
            </if>
            <if test="messageTitle != null" >
                #{messageTitle,jdbcType=VARCHAR},
            </if>
            <if test="messageParameter != null" >
                #{messageParameter,jdbcType=VARCHAR},
            </if>
            <if test="messageRead != null" >
                #{messageRead,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="net.zn.ddxj.entity.Message" >
        update zn_message
        <set >
            <if test="messageType != null" >
                message_type = #{messageType,jdbcType=INTEGER},
            </if>
            <if test="messageContent != null" >
                message_content = #{messageContent,jdbcType=VARCHAR},
            </if>
            <if test="messageTitle != null" >
                message_title = #{messageTitle,jdbcType=VARCHAR},
            </if>
            <if test="messageParameter != null" >
                message_parameter = #{messageParameter,jdbcType=VARCHAR},
            </if>
            <if test="messageRead != null" >
                message_read = #{messageRead,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null" >
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="net.zn.ddxj.entity.Message" >
        update zn_message
        set message_type = #{messageType,jdbcType=INTEGER},
            message_content = #{messageContent,jdbcType=VARCHAR},
            message_title = #{messageTitle,jdbcType=VARCHAR},
            message_parameter = #{messageParameter,jdbcType=VARCHAR},
            message_read = #{messageRead,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            flag = #{flag,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="queryReadMessageList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    	 select 
        <include refid="Base_Column_List" />
        from zn_message
        where message_read = #{type} order by create_time desc
    </select>
    <update id="updateSignMessageRead" parameterType="java.lang.Integer">
    	update zn_message set message_read = 2 where id = #{id}
    </update>
</mapper>